services:
  devbox:
    image: healthsamurai/aidboxone:latest
    depends_on:
      - devbox-db
    links:
      - devbox-db:database
    env_file:
      - .env.aidbox
      - env_tests
    environment:
      AIDBOX_LICENSE: ${TESTS_AIDBOX_LICENSE}
    ports:
      - 8088:8080
    volumes:
      - ./zrc:/zrc
  devbox-db:
    image: healthsamurai/aidboxdb:14.5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: devbox
  devbox-healthcheck:
    image: curlimages/curl
    entrypoint: /bin/sleep 10000
    links:
      - devbox
    depends_on:
      - devbox
    healthcheck:
      test: curl --fail http://devbox:8080/__healthcheck || exit 1
      interval: 1s
      timeout: 20s
      retries: 100
  sdc:
    image: bedasoftware/aidbox-sdc:latest
    command:
      [
        'pipenv',
        'run',
        'gunicorn',
        'main:create_app',
        '--worker-class',
        'aiohttp.worker.GunicornWebWorker',
        '-b',
        '0.0.0.0:8081',
        '--reload'
      ]
    depends_on:
      devbox-healthcheck:
        condition: service_healthy
    env_file:
      - .env.sdc
    tty: true
  sdc-healthcheck:
    image: curlimages/curl
    entrypoint: /bin/sleep 10000
    depends_on:
      - sdc
    healthcheck:
      test: curl --fail http://sdc:8081/live || exit 1
      interval: 1s
      timeout: 20s
      retries: 100
  app:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      devbox-healthcheck:
        condition:
          service_healthy
      sdc-healthcheck:
        condition:
          service_healthy
    environment:
      PYTHONPATH: .
      FHIR_SERVER_AUTHORIZATION: Basic cm9vdDpzZWNyZXQ=
      FHIR_SERVER_BASE_URL: http://devbox:8080
    volumes:
      - .:/app
    command: ["pipenv", "run", "pytest"]
